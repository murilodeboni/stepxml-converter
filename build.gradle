buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "se.transmode.gradle:gradle-docker:1.2"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'docker'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-release'
    }
}

configurations {
    jaxb
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}

dependencies {

    compile 'org.springframework:spring-context-support'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-configuration-processor'
    compile 'org.springframework.boot:spring-boot-starter-undertow:1.3.5.RELEASE'

    compile 'org.apache.logging.log4j:log4j-api:2.7'
    compile 'org.apache.logging.log4j:log4j-core:2.7'
    compile 'org.apache.logging.log4j:log4j-taglib:2.7'
    compile 'org.apache.logging.log4j:log4j-flume-ng:2.7'
    compile 'org.apache.logging.log4j:log4j-to-slf4j:2.7'

    compile 'xom:xom:1.2.5'
    compile 'joda-time:joda-time:2.9.4'
    compile 'javax.transaction:jta:1.1'
    compile 'com.google.guava:guava:21.0'
    compile 'org.projectlombok:lombok:1.16.18'
    compile 'org.apache.commons:commons-lang3:3.7'

    compile 'io.springfox:springfox-swagger2:2.7.0'
    compile 'io.springfox:springfox-swagger-ui:2.7.0'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}

task prepareDocker(type: Copy, dependsOn: build) {
    from jar
    from('Dockerfile')
    from('.') {
        include('application.ctmpl')
        include('application.yml')
        include('messages.ctmpl')
        include('messages.yml')
        include 'consul/**'
        include 'consul-template/**'
        include 'export_consul.sh'
    }
    into('build/docker/')
}